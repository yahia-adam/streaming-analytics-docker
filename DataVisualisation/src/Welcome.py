from database.getDataFromDatabase import *
import streamlit as st

# Configuration de la page
st.set_page_config(
    page_title="Yelp Dashboard â€“ Analyse des avis",
    page_icon="ğŸ“Š",
    layout="wide",
    initial_sidebar_state="expanded"
)

st.title("ğŸ“Š Yelp Dashboard â€“ Analyse des avis")

st.markdown("---")
st.markdown("## Statistiques GÃ©nÃ©rales")

card_style = """
    <div style="
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        text-align: center;
    ">
        <div style='font-size: 24px; font-weight: bold; color: #555;'>{label}</div>
        <div style='font-size: 42px; font-weight: bold; color: #009933;'>{value}</div>
    </div>
"""

with st.spinner("Chargement des donnÃ©es depuis la base..."):
    try:
        reviews = query_db("SELECT * FROM review_table;")
    except Exception as e:
        reviews = None
        st.error("Erreur lors du chargement des **notes**.")
        st.exception(e)

    try:
        business = query_db("SELECT * FROM business_table;")
    except Exception as e:
        business = None
        st.error("Erreur lors du chargement des **entreprises**.")
        st.exception(e)

    try:
        users = query_db("SELECT * FROM user_table;")
    except Exception as e:
        users = None
        st.error("Erreur lors du chargement des **utilisateurs**.")
        st.exception(e)

# VÃ©rification de la disponibilitÃ© des donnÃ©es
if (
    reviews is None or reviews.empty or
    business is None or business.empty or
    users is None or users.empty
):
    st.info("Aucune donnÃ©e disponible pour les notes, entreprises ou utilisateurs.")
else:
    st.success("DonnÃ©es chargÃ©es avec succÃ¨s !")

    st.markdown("### Quelques chiffres clÃ©s")

    try:
        col1, col2, col3 = st.columns(3)
        with col1:
            st.markdown(card_style.format(label="Nombre dâ€™avis", value=reviews.shape[0]), unsafe_allow_html=True)
        with col2:
            st.markdown(card_style.format(label="Entreprises", value=business.shape[0]), unsafe_allow_html=True)
        with col3:
            st.markdown(card_style.format(label="Utilisateurs", value=users.shape[0]), unsafe_allow_html=True)
    except Exception as e:
        st.error("Une erreur est survenue lors de l'affichage des statistiques.")
        st.exception(e)

# ---------------------- TABLEAUX DE DONNÃ‰ES ---------------------- #

    # st.markdown("---")
    # st.markdown("## Exploration des donnÃ©es brutes")

    # try:
    #     st.markdown("### Avis des utilisateurs")
    #     st.dataframe(reviews)
    # except Exception as e:
    #     st.error("Impossible d'afficher les avis.")
    #     st.exception(e)

    # try:
    #     st.markdown("### DÃ©tails des entreprises")
    #     st.dataframe(business)
    # except Exception as e:
    #     st.error("ProblÃ¨me lors de l'affichage des entreprises.")
    #     st.exception(e)

    # try:
    #     st.markdown("### Informations sur les utilisateurs")
    #     st.dataframe(users)
    # except Exception as e:
    #     st.error("Les utilisateurs sont inaccessibles pour le moment.")
    #     st.exception(e)

st.markdown("## ProblÃ©matique")
st.markdown("> ### Pourquoi certaines entreprises reÃ§oivent-elles de mauvaises notes ?")
st.markdown("""
Lâ€™objectif de cette Ã©tude est de rÃ©pondre aux questions suivantes :

- **Quelles sont les caractÃ©ristiques communes aux entreprises qui reÃ§oivent de mauvaises notes ?**  
  (ex : type dâ€™activitÃ©, localisation, statut ouvert/fermÃ©...)

- **Quels sont les Ã©lÃ©ments rÃ©currents dans les avis nÃ©gatifs laissÃ©s par les utilisateurs ?**  
  (ex : qualitÃ© du service, prix, propretÃ©, dÃ©lai...)

- **Existe-t-il des tendances saisonniÃ¨res ou hebdomadaires dans la distribution des mauvaises Ã©valuations ?**

- **Peut-on identifier des signaux faibles qui prÃ©cÃ¨dent une fermeture dâ€™entreprise Ã  partir des avis ?**
""")
